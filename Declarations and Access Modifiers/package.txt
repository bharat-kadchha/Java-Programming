        ** Package **
        =============


        -> It is an encapsulation mechanisam to group related classes and interfaces into a single unit, which is nothing but Package.
        
        Example 1 :- All classes and interfaces which are required for database operations are grouped into a single Package which is nothing but java.sql Package.

    The main advantages of Package are:-
        -> To resolve namming conflicts (unique identification of our components).
        -> It improves modularity of the application.
        -> It improves maintainability of the application.
        -> It provide security for our components.

    -> Universely accepted namming convention is to use internate domain name in reverse.

    
    package com.yogesh.test;
    class Package {
        public static void main(String[] args){
            System.out.println("Package...");
        }
    }

    ** javac Package.java

        -> Generated class file placed into current working directory.


    ** javac -d . Package.java

        -> -d :- destination to place generated class file.
        -> . :- means current working directory.

        -> If corrosponding package not allready available then this command it self will create package structure.

        -> we can take any valid directory path.
        -> At the time of execution we have to use fully Qualified name.

    **java com.yogesh.test.Package


    Conclusion 1:-
        -> In any java source file there can be atmost one package statement is allowded that mean more then one package is not allowded.


    Conclusion 2:- 
        ->
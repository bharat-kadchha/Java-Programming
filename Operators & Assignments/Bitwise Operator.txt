        Java Operators.

    7. bitwise Operators(&(AND) ,|(OR), ^(X-OR))

        1. & -> AND -> return true if and only if both arguments are true.
        2. | -> OR -> return true if and only if at least one argument is true.
        3. ^ -> X-OR -> return true if and if both arguments are different.

    -> we can apply bitwise operator to boolean and integer type.
            -> System.out.println(true & false); // false
            -> System.out.println(true | false); // true
            -> System.out.println(true ^ false); // true

    -> For integer type(byte,short,int,long)

            -> System.out.println(4 & 5); // 4
            -> System.out.println(4 | 5); // 5
            -> System.out.println(4 ^ 5); // 1

           AND               OR          X-OR
        4   -> 100           100          100 
        5   -> 101           101          101
        Ans -> 100           101          001


    

    8.  Bitwise compliment operator(~)

        -> bitwise compliment operator only applicable for integer(byte,short,int,long).

        System.out.println(~true); // Compile time error: bad operand type boolean for unary operator '~
        
        System.out.println(~4); //-5

        -> why ~4 is -5?
            -> Bydefault 4 is int type.

            -> binary representation of 4 is like below.
                -> 0 (000.....0100)

            -> negation of 4 (~4) is like.
                -> 1 (111....1011)

            -> Most significant bit is for sign bit(1-negative, 0-positive).

            -> positive numbers will be represented directly in the memory.
            -> negative number will be represented indirectly in 2's compliment form.

            -> so 1 (1111.....1011) became -> 1 (0000....0100) as 1's compliment at memory level.
            -> 1 (0000.....0100) + 1 -> 1 (0000....0101) = -5.



    NOTE:- All bitwise operators are performed based on it's type.
        -> If it is integer then operation is performed in 32 bits only.


    9. Boolean compliment operator(!).
        -> Boolean compliment operator is only applicable for boolean.

        -> System.out.println(!4);  // Compile time error:- bad operand type int for unary operator '!'
        -> System.out.println(!true); // false



SUMMARY:-

    (&,|,^) -> Applicable for both integer and boolean type.

    (~) -> Applicable only for integer types.

    (!) -> Applicable only for boolean.
    
    Operators in java 

1. Increment and Decrement Operators(++,--).
   
   -> Increment Operators.
        -> Two types of Increment Operators.
            1. pre-increment Example:- y = ++x.
            2. post-increment Example:- y = x++.
    
    -> Decrement Operators.
        -> Two types of decrement Operators.
            1. pre-decrement Example:- y = --x.
            2. post-decrement Example:- y = x--.
        
    expression        x value       y value         final x value
    y = ++x             10            11              11
    y = x++             10            10              11
    y = --x             10             9               9
    y = x--             10            10               9


case 1. Increment and Decrement Operators are only applicable for variables not for constant values.

    // Valid 
    int x = 10;
    int y = ++x;
    System.out.println(y); //11

    //compile time error
    int x = 10;
    int y = ++10; // compile time error:- unexpected type.
    System.out.println(y);

case 2. Nesting of Increment and decrement Operators are not allowded.

    int x = 10;
    int y = ++(++x); // compile time error:- unexpected type.
    System.out.println(y); 


case 3. Increment and decrement Operators are not allowded for constant variables.

    final int x = 10;
    x++;    //  error: cannot assign a value to final variable x
    System.out.println(x);

case 4. Increment and Decrement Operators are allow for all primitive types except for boolean.

    int x = 10;
    x++;
    System.out.println(x); // 11

    double x = 10.5;
    x++;
    System.out.println(x); // 11.5

    char x = 'a';
    x++;
    System.out.println(x); // b

    boolean x = true;
    x++;
    System.out.println(x); // error: bad operand type boolean for unary operator '++'

case 5. Difference between b++ and b = b + 1;

    byte b1 = 10;
    b++;
    System.out.println(b);


    byte b1 = 10;
    b = b + 1; // error: incompatible types: possible lossy conversion from int 
    System.out.println(b);

-> In increment and decrement operator type casting is done implicitly.
-> but in b = b + 1 operation we need to perform typecasting explicitly because the result type is MAX(int, type of a, type of b).




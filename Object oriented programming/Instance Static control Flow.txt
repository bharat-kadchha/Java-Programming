        Instance and Static control flow
        ================================

    Example 1:- 

        class Test{
            {
                System.out.println("First Instance block");
            }
            static{
                System.out.println("First static block");
            }
            Test(){
                System.out.println("constructor");
            }
            public static void main(String[] args){
                Test t = new Test();
                System.out.println("main");
                Test t1 = new Test();
            }
            static{
                System.out.println("Second static Block");
            }
            {
                System.out.println("Second Instance Block");
            }
        }


        output:- 

            First static block
            Second static Block
            First Instance block
            Second Instance Block
            constructor
            main
            First Instance block
            Second Instance Block
            constructor


    Example 2:- 

        class Initialization{
            private static String m1(String arg){
                System.out.println(arg);
                return arg;
            }
            public Initialization(){
                m = m1("1");
            }
            {
                m = m1("2");
            }
            String m = m1("3");
            public static void main(String[] args){
                Object o = new Initialization();
            }
        }

        output:- 
            2
            3
            1
        

    Example 3:- 

        class Initialization{
            private static String m1(String arg){
                System.out.println(arg);
                return arg;
            }
            static String m = m1("1");
            {
                m = m1("2");
            }
            static
            {
                m = m1("3");
            }
            public static void main(String[] args){
                Object o = new Initialization();
            }
        }

        output:- 
            1
            3
            2


    NOTE 
    ----
        -> From static area we can't access instance members directly because while executing static area JVM may not identify instance members.
        
        